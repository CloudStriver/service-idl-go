syntax = "proto3";
package cloudmind.system;
option go_package = 'cloudmind/system';
import "basic/pagination.proto";
import "cloudmind/system/common.proto";



message GetNotificationsReq {
  string userId = 1;
  optional int64 onlyType = 2;
  optional basic.PaginationOptions paginationOptions = 3;
}

message GetNotificationsResp {
  repeated Notification notifications = 1;
  string token = 2;
}

message CreateNotificationsReq {
  string targetUserId = 1;
  string sourceUserId = 2;
  string sourceContentId = 3;
  int64 targetType = 4;
  int64 type = 5;
  string text = 6;
}

message CreateNotificationsResp {
}

message GetNotificationCountReq {
  string userId = 1;
}

message GetNotificationCountResp {
  int64 total = 1;
}

message CreateNotificationCountReq{
  string userId = 1;
}
message CreateNotificationCountResp{
}


message DeleteNotificationsReq{
  string userId = 1;
  repeated string notificationIds = 2;
  optional int64 onlyType = 3;
}
message DeleteNotificationsResp{
}

message GetSlidersReq {
  optional int64 onlyType = 1; // 类型
  optional int64 onlyIsPublic = 2; // 是否公开
  optional basic.PaginationOptions paginationOptions = 3; //  分页
}

message GetSlidersResp {
  repeated Slider sliders = 1;
  int64 total = 2;
  string token = 3;
}

message CreateSliderReq {
  string imageUrl = 1; // 图片链接
  string linkUrl = 2; // 跳转链接
  int64 isPublic = 3; // 是否公开
}

message CreateSliderResp {
}

message UpdateSliderReq {
  string sliderId = 1;
  string imageUrl = 2;
  string linkUrl = 3;
  int64 isPublic = 4;
}

message UpdateSliderResp {
}

message DeleteSliderReq {
  string sliderId = 1;
}

message DeleteSliderResp {
}

service SystemService {
//  rpc RetrieveNotice(RetrieveNoticeReq) returns (RetrieveNoticeResp);
//  rpc ListNotice(ListNoticeReq) returns (ListNoticeResp);
//  rpc CreateNotice(CreateNoticeReq) returns (CreateNoticeRexesp);
//  rpc UpdateNotice(UpdateNoticeReq) returns (UpdateNoticeResp);
//  rpc DeleteNotice(DeleteNoticeReq) returns (DeleteNoticeResp);

  // 轮播图
  rpc GetSliders(GetSlidersReq) returns (GetSlidersResp);
  rpc CreateSlider(CreateSliderReq) returns (CreateSliderResp);
  rpc UpdateSlider(UpdateSliderReq) returns (UpdateSliderResp);
  rpc DeleteSlider(DeleteSliderReq) returns (DeleteSliderResp);
  //通知
  rpc GetNotifications(GetNotificationsReq) returns (GetNotificationsResp);
  rpc GetNotificationCount(GetNotificationCountReq) returns (GetNotificationCountResp);
  rpc CreateNotifications(CreateNotificationsReq) returns (CreateNotificationsResp);
  rpc CreateNotificationCount(CreateNotificationCountReq) returns (CreateNotificationCountResp);
  rpc DeleteNotifications(DeleteNotificationsReq) returns (DeleteNotificationsResp);
}