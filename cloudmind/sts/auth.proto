syntax = "proto3";
package cloudmind.sts;
option go_package = "cloudmind/sts";
import "cloudmind/sts/common.proto";
import "basic/pagination.proto";
message SendEmailReq {
  string email = 1;
  string subject = 2;
}

message SendEmailResp {
}

message SetPasswordReq{
  oneof Key {
    UserIdOptions userIdOptions = 1;
    EmailOptions emailOptions = 2;
  }
  string password = 3;
}
message SetPasswordResp{
}

message CheckEmailReq{
  string email = 1;
  string code = 2;
}

message CheckEmailResp{
  bool ok = 1;
}

message CreateAuthReq{
  AuthInfo authInfo = 1;
  UserInfo userInfo = 2;
}

message CreateAuthResp{
  string userId = 1;
}

message LoginReq{
  AuthInfo auth = 1;
  string password = 2;
}
message LoginResp {
  string userId = 1;
}

message AppendAuthReq{
  string userId = 1;
  AuthInfo authInfo = 2;
  optional string code = 3;
}

message AppendAuthResp{
}


message GenCosStsReq {
  string path = 1;
  bool isFile = 2;
  int64 time = 3;
}

message GenCosStsResp {
  string secretId = 1;
  string secretKey = 2;
  string sessionToken = 3;
  int64 expiredTime = 4;
  int64 startTime = 5;
}

message GenSignedUrlReq {
  string path = 1;
  int64 ttl = 2;
}

message GenSignedUrlResp {
  string signedUrl = 1;
}

message DeleteObjectReq {
  string path = 1;
}

message DeleteObjectResp {
}


message ReplaceContentReq{
  repeated string contents = 1;
}
 
message ReplaceContentResp{
  repeated string content = 1;
} 

message FindAllContentReq{
  repeated string contents = 1;
}   

message Keywords {
  repeated string keywords = 1;
}

message FindAllContentResp{ 
  repeated Keywords keywords = 1;
}

service StsService {
    rpc SetPassword(SetPasswordReq) returns(SetPasswordResp);
    rpc SendEmail(SendEmailReq) returns(SendEmailResp);
    rpc CheckEmail(CheckEmailReq) returns(CheckEmailResp);
    rpc CreateAuth(CreateAuthReq) returns(CreateAuthResp);
    rpc Login(LoginReq) returns(LoginResp);
    rpc AppendAuth(AppendAuthReq) returns(AppendAuthResp);
    rpc genCosSts(GenCosStsReq) returns (GenCosStsResp);
    rpc genSignedUrl(GenSignedUrlReq) returns (GenSignedUrlResp);
    rpc deleteObject(DeleteObjectReq) returns (DeleteObjectResp);
    rpc ReplaceContent(ReplaceContentReq) returns(ReplaceContentResp);
    rpc FindAllContent(FindAllContentReq) returns(FindAllContentResp);
  }
