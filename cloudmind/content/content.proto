syntax = "proto3";

package cloudmind.content;
option go_package = "cloudmind/content";

import "basic/pagination.proto";
import "cloudmind/content/common.proto";

message GetFileIsExistReq {
  string md5 = 1;
}

message GetFileIsExistResp {
  bool ok = 1;
}

message GetFileReq{
  optional FileFilterOptions filterOptions = 1;
  bool IsGetSize = 2;
}

message GetFileResp{
  FileInfo file = 1;
}

message GetFileListReq{
  optional SearchOptions searchOptions = 1;
  optional FileFilterOptions filterOptions = 2;
  optional basic.PaginationOptions paginationOptions = 3;
}

message GetFileListResp{
  repeated FileInfo files = 1;
  int64 total = 2;
  string token = 3;
}

message GetFolderSizeReq{
  optional FileFilterOptions filterOptions = 1;
}

message GetFolderSizeResp{
  int64 spaceSize = 1;
}

message GetFileCountReq{
  optional SearchOptions searchOptions = 1;
  optional FileFilterOptions filterOptions = 2;
}

message GetFileCountResp{
  int64 count = 1;

}

message GetFileBySharingCodeReq{
  string sharingCode = 1;
}

message GetFileBySharingCodeResp{
  repeated FileInfo files = 1;

}

message CreateFolderReq{
  File file = 1;
}

message CreateFolderResp{
  string fileId = 1;

}

message UpdateFileReq{
  File file = 1;
}

message UpdateFileResp{

}

message MoveFileReq{
  optional FileFilterOptions filterOptions = 1;
}

message MoveFileResp{

}

message DeleteFileReq{
  string fileId = 1;
  string userId = 2;
  bool clearUpload = 3;
}

message DeleteFileResp{
  bool ok = 1;

}

message DeleteShareFileReq{
  string shareId = 1;
  string userId = 2;
}

message DeleteShareFileResp{
  bool ok = 1;

}

message DeleteExpiredFilesReq{
}

message DeleteExpiredFilesResp{
}

message DeleteExpiredShareCodesReq{
}

message DeleteExpiredShareCodesResp{
}

//message UploadFileReq {
//  repeated bytes file = 1;
//  repeated string name = 2;
//}

//message UploadFileResp {
//
//}

message AskUploadFileReq {
  File file = 1;
  bool ok = 2;
}

message AskUploadFileResp {
}

message CreateLabelReq {
  Label label = 1;
}

message CreateLabelResp {
  string id = 1;
}

message GetLabelReq {
  string id = 1;
}

message GetLabelResp {
  Label label = 1;
}

message UpdateLabelReq {
  Label label = 1;
}

message UpdateLabelResp {
}

message DeleteLabelReq {
  string id = 1;
}

message DeleteLabelResp {
}

//service
service ContentService {
  rpc GetFileIsExist(GetFileIsExistReq) returns(GetFileIsExistResp);
  rpc GetFile(GetFileReq) returns(GetFileResp);
  rpc GetFileList(GetFileListReq) returns(GetFileListResp);
  rpc GetFileCount(GetFileCountReq) returns(GetFileCountResp);
  rpc GetFileBySharingCode(GetFileBySharingCodeReq) returns(GetFileBySharingCodeResp);
  rpc GetFolderSize(GetFolderSizeReq) returns(GetFolderSizeResp);
  rpc CreateFolder(CreateFolderReq) returns(CreateFolderResp);
  rpc UpdateFile(UpdateFileReq) returns(UpdateFileResp);
  rpc MoveFile(MoveFileReq) returns(MoveFileResp);
//  rpc UploadFile (UploadFileReq) returns(UploadFileResp);
  rpc AskUploadFile (AskUploadFileReq) returns(AskUploadFileResp);
  rpc AskUploadFileRollback (AskUploadFileReq) returns(AskUploadFileResp);
  rpc DeleteFile(DeleteFileReq) returns(DeleteFileResp);
  rpc DeleteShareFile(DeleteShareFileReq) returns(DeleteShareFileResp);
  rpc DeleteExpiredFiles(DeleteExpiredFilesReq) returns(DeleteExpiredFilesResp);
  rpc DeleteExpiredShareCodes(DeleteExpiredShareCodesReq) returns(DeleteExpiredShareCodesResp);

  rpc GetLabel(GetLabelReq) returns(GetLabelResp);
  rpc CreateLabel(CreateLabelReq) returns(CreateLabelResp);
  rpc UpdateLabel(UpdateLabelReq) returns(UpdateLabelResp);
  rpc DeleteLabel(DeleteLabelReq) returns(DeleteLabelResp);
}
