syntax = "proto3";
package cloudmind.core_api;
option go_package = "cloudmind/core_api";
import "basic/pagination.proto";
import "cloudmind/core_api/common.proto";
import "platform/common.proto";
import "http/http.proto";

message CreateCommentReq {
  string subjectId = 1;
  string rootId = 2;
  string fatherId = 3;
  repeated string labelIds = 4; // 标签id列表：作者点赞，作者回复等
  string atUserId = 5; // @谁
  string content = 6; // 内容
  string meta = 7; // 皮肤，字体等
}

message CreateCommentResp {
  string id = 1;
}

message GetCommentReq {
  string id = 1;
}

message GetCommentResp {
  string subjectId = 1;
  string rootId = 2;
  string fatherId = 3;
  int64 count = 4; // 回复数
  int64 state = 5; // 1: 正常, 2: 删除
  int64 attrs = 6; // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
  repeated string labels = 7; // 标签：作者点赞，作者回复等
  string userId = 8; // 评论者
  string atUserId = 9; // @谁
  string content = 10; // 内容
  string meta = 11; // 皮肤，字体等
  int64 createAt = 12; // 创建时间
  int64 likedCount = 13; // 点赞数
  SimpleUser author = 14; // 评论者信息
  CommentRelation commentRelation = 15; // 评论关系信息
}

message GetCommentsReq {
  optional string onlyUserId = 1;
  optional string onlyAtUserId = 2;
  optional string onlySubjectId = 3;
  optional string onlyRootId = 4;
  optional string onlyFatherId = 5;
  optional int64 onlyState = 6;
  optional int64 onlyAttrs = 7;
  optional int64 limit = 8;
  optional string lastToken = 9;
  optional bool backward = 10;
  optional int64 offset = 11;
}

message GetCommentsResp {
  repeated Comment comments = 1;
  int64 total = 2;
  string token = 3;
}

message UpdateCommentReq {
  string id = 1;
  State state = 2; // 1: 正常, 2: 删除
  repeated string labelIds = 3; // 标签：作者点赞，作者回复等
}

message UpdateCommentResp {
}

message DeleteCommentReq {
  string id = 1;
}

message DeleteCommentResp {
}

message SetCommentAttrsReq {
  string id = 1;
  Attrs attrs = 2;
}

message SetCommentAttrsResp{
}

message GetCommentSubjectReq {
  string id = 1;
}

message GetCommentSubjectResp {
  string userId = 1;
  string topCommentId = 2;
  int64 rootCount = 3;
  int64 allCount = 4;
  int64 state = 5; // 1: 正常, 2: 删除
  int64 attrs = 6; // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
}

message UpdateCommentSubjectReq {
  string id = 1;
  State state = 2; // 1: 正常, 2: 删除
  Attrs attrs = 3; // 1: 无, 2: 置顶, 3: 精华, 4: 置顶+精华
}

message UpdateCommentSubjectResp {
}

message DeleteCommentSubjectReq {
  string id = 1;
}

message DeleteCommentSubjectResp {
}

message CreateLabelReq {
  string fatherId = 1;
  string value = 2;
}

message CreateLabelResp {
  string id = 1;
}

message DeleteLabelReq {
  string id = 1;
}

message DeleteLabelResp {
}

message GetLabelReq {
  string id = 1;
}

message GetLabelResp {
  string label = 1;
}

message UpdateLabelReq {
  string id = 1;
  string fatherId = 2;
  string value = 3;
}

message UpdateLabelResp {
}

message GetLabelsReq {
  optional string key = 1; // 用于匹配标签的key
  optional int64 limit = 2;
  optional string lastToken = 3;
  optional bool backward = 4;
  optional int64 offset = 5;
  optional string fatherId = 6;
}

message GetLabelsResp {
  repeated Label labels = 1;
  int64 total = 2;
  string token = 3;
}

message GetLabelsInBatchReq {
  repeated string ids = 1;
}

message GetLabelsInBatchResp {
  repeated string labels = 1;
}

message Relation {
  TargetType fromType = 1;
  string fromId = 2;
  TargetType toType = 3;
  string toId = 4;
  RelationType relationType = 5;
}
message CreateRelationReq{
  string toId = 1;
  TargetType toType = 2[(http.vd) = "$ >= 1 && $ <= 3"];
  RelationType relationType = 3[(http.vd) = "$ >= 1 && $ <= 10"];
}
message CreateRelationResp{
}

message GetFromRelationsReq{
  string fromId = 1;
  int64 fromType = 2[(http.vd) = "$ >= 1 && $ <= 3"];
  TargetType toType = 3[(http.vd) = "$ >= 1 && $ <= 3"];
  int64 relationType = 4[(http.vd) = "$ >= 1 && $ <= 10"];
  optional int64 limit = 5;
  optional int64 offset = 6;
}
message GetFromRelationsResp{
  repeated User users = 1;
  repeated PublicFile files = 2;
  repeated Post posts = 3;
}

message GetToRelationsReq{
  int64 toType = 1[(http.vd) = "$ >= 1 && $ <= 3"];
  string toId = 2;
  TargetType fromType = 3[(http.vd) = "$ == 1"];
  int64 relationType = 4[(http.vd) = "$ >= 1 && $ <= 10"];
  optional int64 limit = 5;
  optional int64 offset = 6;
}

message GetToRelationsResp{
  repeated User users = 1;
}

message GetRelationReq{
  string fromId = 1;
  int64 fromType = 2[(http.vd) = "$ >= 1 && $ <= 3"];
  string toId = 3;
  int64 toType = 4[(http.vd) = "$ >= 1 && $ <= 3"];
  int64 relationType = 5[(http.vd) = "$ >= 1 && $ <= 10"];
}

message GetRelationResp{
  bool ok = 1;
}

message DeleteRelationReq{
  string toId = 1;
  int64 toType = 2[(http.vd) = "$ >= 1 && $ <= 3"];
  int64 relationType = 3[(http.vd) = "$ >= 1 && $ <= 10"];
}
message DeleteRelationResp{
}

message GetRelationPathsReq{
  RelationType relationType = 1[(http.vd) = "$ >= 1 && $ <= 10"];
  optional int64 limit = 2;
  optional int64 offset = 3;
}

message GetRelationPathsResp{
  repeated User users = 1;
  repeated PublicFile files = 2;
  repeated Post posts = 3;
}