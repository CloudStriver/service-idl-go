syntax = "proto3";
package cloudmind.core_api;
option go_package = "cloudmind/core_api";
import "cloudmind/sts/common.proto";
import "cloudmind/content/common.proto";
import "basic/pagination.proto";
import "http/http.proto";
import "cloudmind/core_api/content.proto";
enum UploadType{
  UnknownUploadType = 0;
  UserAvatarUploadType = 1;
  PostAvatarUploadType = 2;
  ProductAvatarUploadType = 3;
}

message RegisterReq{
  string name = 1[(http.vd) = "len($) >= 1 && len($) <= 20"];
  string email = 2[(http.vd) = "email($)"];
  string password = 3;
  bool isSure = 4;
}
message RegisterResp{
  string shortToken = 1;
  string longToken = 2;
  string userId = 3;
  repeated Keywords keywords = 4;
}

message EmailLoginReq{
  string email = 1[(http.vd) = "email($)"];
  string password = 2;
}

message EmailLoginResp{
  string shortToken = 1;
  string longToken = 2;
  string userId = 3;
}

message GithubLoginReq{
  string code = 1;
}

message GithubLoginResp{
  string shortToken = 1;
  string longToken = 2;
  string userId = 3;
}

message GiteeLoginReq{
  string code = 1;
}

message GiteeLoginResp{
  string shortToken = 1;
  string longToken = 2;
  string userId = 3;
}

message WxMaUserInfo {
  string openId = 1;
  string nickName = 2;
  int64 gender = 3;
  string avatarUrl = 4;
}
message WeixinCallBackReq{
  bool scanSuccess = 1;
  bool cancelLogin = 2;
  string tempUserId = 3;
  WxMaUserInfo wxMaUserInfo = 4;
}

message WeixinCallBackResp{
  int64 code = 1;
  string msg = 2;
}

message WeixinLoginReq{
}

message WeixinLoginResp{
  string  qrUrl = 1;
  string tempUserId = 2;
}

message WeixinIsLoginReq{
  string tempUserId = 1;
}
message WeixinIsLoginResp{
  string shortToken = 1;
  string longToken = 2;
  string userId = 3;
  string status = 4;
}

message QQLoginReq {
  string code = 1;
}

message QQLoginResp {
  string shortToken = 1;
  string longToken = 2;
  string userId = 3;
}


message RefreshTokenReq {
  string longToken = 1;
}

message RefreshTokenResp{
  string shortToken = 1;
  string longToken = 2;
}

message SendEmailReq {
  string email = 1[(http.vd) = "email($)"];
  string subject = 2;
}

message SendEmailResp {
}

message GetCaptchaReq{
}

message GetCaptchaResp{
  string originalImageBase64 = 1;
  string jigsawImageBase64 = 2;
  string key = 3;
}


message SetPasswordByEmailReq{
  string email = 1[(http.vd) = "email($)"];
  string password = 2;
}
message SetPasswordByEmailResp{
}


message SetPasswordByPasswordReq{
  string oldPassword = 1;
  string password = 2;
}
message SetPasswordByPasswordResp{
}

message CheckEmailReq{
    string email = 1[(http.vd) = "email($)"];
    string code = 2;
}

message CheckEmailResp{
   bool ok = 1;
}


message AskUploadAvatarReq{
  string name = 1;
  int64 avatarSize = 2;
}

message AskUploadAvatarResp{
  string tmpSecretId = 1;
  string tmpSecretKey = 2;
  int64 startTime = 3;
  int64 expiredTime = 4;
  string sessionToken = 5;
}

