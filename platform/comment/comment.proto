syntax = "proto3";
package platform.comment;
option go_package = "platform/comment";

import "platform/comment/common.proto";
import "basic/pagination.proto";

message CreateCommentReq {
  Comment comment = 1;
}

message CreateCommentResp {
  string id = 1;
}

message GetCommentReq {
  string commentId = 1;
}

message GetCommentResp {
  CommentInfo comment = 1;
}

message GetCommentListReq {
  optional CommentFilterOptions filterOptions = 1;
  optional basic.PaginationOptions pagination = 2;
}

message GetCommentListResp {
  repeated CommentInfo comments = 1;
  int64 total = 2;
  string token = 3;
}

message UpdateCommentReq {
  Comment comment = 1;
}

message UpdateCommentResp {

}

message DeleteCommentReq {
  string id = 1;
}

message DeleteCommentResp {
}

message SetCommentAttrsReq {
  string id = 1;
  int64 attrs = 2;
  string subjectId = 3;
  int64 sortTime = 4;
}

message SetCommentAttrsResp{

}

message GetCommentSubjectReq {
  string id = 1;
}

message GetCommentSubjectResp {
  SubjectDetails subject = 1;
}

message CreateCommentSubjectReq {
  Subject subject = 1;
}

message CreateCommentSubjectResp {
  string id = 1;
}

message UpdateCommentSubjectReq {
  Subject subject = 1;
}

message UpdateCommentSubjectResp {

}

message DeleteCommentSubjectReq {
  string id = 1;
}

message DeleteCommentSubjectResp {
}

message CreateLabelReq {
  Label label = 1;
}
message CreateLabelResp {
  string id = 1;
}
message DeleteLabelReq {
  string id = 1;
}
message DeleteLabelResp {
}
message GetLabelReq {
  string id = 1;
}
message GetLabelResp {
  string label = 1;
}
message UpdateLabelReq {
  Label label = 1;
}
message UpdateLabelResp {
}
message GetLabelsReq {
  string key = 1; // 用于匹配标签的key
  optional basic.PaginationOptions pagination = 2;
}
message GetLabelsResp {
  repeated Label labels = 1;
  int64 total = 2;
  string token = 3;
}
message GetLabelsInBatchReq {
  repeated string labelIds = 1;
}
message GetLabelsInBatchResp {
  repeated string labels = 1;
}

service CommentService {
  rpc GetComment(GetCommentReq) returns (GetCommentResp);
  rpc GetCommentList(GetCommentListReq) returns (GetCommentListResp);
  rpc CreateComment(CreateCommentReq) returns (CreateCommentResp);
  rpc UpdateComment(UpdateCommentReq) returns (UpdateCommentResp);
  rpc DeleteComment(DeleteCommentReq) returns (DeleteCommentResp);
  rpc SetCommentAttrs(SetCommentAttrsReq) returns (SetCommentAttrsResp);
  rpc GetCommentSubject(GetCommentSubjectReq) returns (GetCommentSubjectResp);
  rpc CreateCommentSubject(CreateCommentSubjectReq) returns (CreateCommentSubjectResp);
  rpc UpdateCommentSubject(UpdateCommentSubjectReq) returns (UpdateCommentSubjectResp);
  rpc DeleteCommentSubject(DeleteCommentSubjectReq) returns (DeleteCommentSubjectResp);

  rpc CreateLabel(CreateLabelReq) returns (CreateLabelResp);
  rpc DeleteLabel(DeleteLabelReq) returns (DeleteLabelResp);
  rpc GetLabel(GetLabelReq) returns (GetLabelResp);
  rpc GetLabelsInBatch(GetLabelsInBatchReq) returns(GetLabelsInBatchResp);
  rpc UpdateLabel(UpdateLabelReq) returns (UpdateLabelResp);
  rpc GetLabels(GetLabelsReq) returns (GetLabelsResp);
}
