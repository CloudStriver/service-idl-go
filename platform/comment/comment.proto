syntax = "proto3";
package platform.comment;
option go_package = "platform/comment";

import "platform/comment/common.proto";
import "basic/pagination.proto";

message CreateCommentReq {
  Comment comment = 1;
}

message CreateCommentResp {
  string id = 1;
}

message GetCommentReq {
  optional CommentFilterOptions filterOptions = 1;
}

message GetCommentResp {
  CommentInfo comment = 1;
}

message GetCommentListReq {
  optional CommentFilterOptions filterOptions = 1;
  optional basic.PaginationOptions pagination = 2;
}

message GetCommentListResp {
  repeated CommentInfo comments = 1;
  int64 total = 2;
  string token = 3;
}

message UpdateCommentReq {
  Comment comment = 1;
}

message UpdateCommentResp {

}

message DeleteCommentReq {
  string id = 1;
}

message DeleteCommentResp {
}

message DeleteCommentWithUserIdReq {
  string id = 1;
  string userId = 2;
}

message DeleteCommentWithUserIdResp {
}

message SetCommentStateReq {
  string id = 1;
  string userId = 2;
  State state = 3;
}

message SetCommentStateResp {
}

message SetCommentAttrsReq {
  string id = 1;
  string userId = 2;
  Attrs attrs = 3;
}

message SetCommentAttrsResp{

}

message GetCommentSubjectReq {
  SubjectFilterOptions filterOptions = 1;
}

message GetCommentSubjectResp {
  SubjectDetails subject = 1;
}

message CreateCommentSubjectReq {
  Subject subject = 1;
}

message CreateCommentSubjectResp {
  string id = 1;
}

message UpdateCommentSubjectReq {
  Subject subject = 1;
}

message UpdateCommentSubjectResp {

}

message DeleteCommentSubjectReq {
  string id = 1;
  string userId = 2;
}

message DeleteCommentSubjectResp {
}

message SetCommentSubjectStateReq {
  string id = 1;
  string userId = 2;
  State state = 3;
}

message SetCommentSubjectStateResp {
}

message SetCommentSubjectAttrsReq {
  string id = 1;
  string userId = 2;
  Attrs attrs = 3;
}

message SetCommentSubjectAttrsResp{
}

service CommentService {
  rpc GetComment(GetCommentReq) returns (GetCommentResp);
  rpc GetCommentList(GetCommentListReq) returns (GetCommentListResp);
  rpc CreateComment(CreateCommentReq) returns (CreateCommentResp);
  rpc UpdateComment(UpdateCommentReq) returns (UpdateCommentResp);
  rpc DeleteComment(DeleteCommentReq) returns (DeleteCommentResp);
  rpc DeleteCommentWithUserId(DeleteCommentWithUserIdReq) returns (DeleteCommentWithUserIdResp);
  rpc SetCommentState(SetCommentStateReq) returns (SetCommentStateResp);
  rpc SetCommentAttrs(SetCommentAttrsReq) returns (SetCommentAttrsResp);
  rpc GetCommentSubject(GetCommentSubjectReq) returns (GetCommentSubjectResp);
  rpc CreateCommentSubject(CreateCommentSubjectReq) returns (CreateCommentSubjectResp);
  rpc UpdateCommentSubject(UpdateCommentSubjectReq) returns (UpdateCommentSubjectResp);
  rpc DeleteCommentSubject(DeleteCommentSubjectReq) returns (DeleteCommentSubjectResp);
  rpc SetCommentSubjectState(SetCommentSubjectStateReq) returns (SetCommentSubjectStateResp);
  rpc SetCommentSubjectAttrs(SetCommentSubjectAttrsReq) returns (SetCommentSubjectAttrsResp);
}
