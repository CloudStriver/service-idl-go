syntax = "proto3";
package platform.relation;
option go_package = "platform/relation";

import "basic/pagination.proto";
import "platform/relation/common.proto";


message CreateRelationReq{
  RelationInfo relationInfo = 1;
}
message CreateRelationResp{
}

message GetRelationReq{
  RelationInfo relationInfo = 1 ;
}

message GetRelationResp{
  bool ok = 1;
}

message DeleteRelationReq{
  RelationInfo relationInfo = 1;
}
message DeleteRelationResp{
}

message FromFilterOptions{
   int64 onlyFromType = 1;
   string onlyFromId = 2;
}
message ToFilterOptions{
  int64 onlyToType = 3;
  string onlyToId = 4;
}

message GetRelationsReq{
  oneof relationFilterOptions {
      FromFilterOptions fromFilterOptions = 1;
      ToFilterOptions toFilterOptions = 2;
  }
  optional int64  onlyRelationType = 3;
  optional basic.PaginationOptions paginationOptions = 4;
}
message GetRelationsResp{
  repeated Relation relations = 1;
  int64 total = 2;
}

message GetRelationCountReq{
  oneof relationFilterOptions {
    FromFilterOptions fromFilterOptions = 1;
    ToFilterOptions toFilterOptions = 2;
  }
  optional int64  onlyRelationType = 3;
}
message GetRelationCountResp{
  int64 total = 1;
}


service RelationService {
  rpc CreateRelation(CreateRelationReq) returns(CreateRelationResp);
  rpc GetRelations(GetRelationsReq) returns(GetRelationsResp);
  rpc GetRelationCount(GetRelationCountReq) returns(GetRelationCountResp);
  rpc DeleteRelation(DeleteRelationReq) returns(DeleteRelationResp);
  rpc GetRelation(GetRelationReq) returns(GetRelationResp);
}
