syntax = "proto3";

option go_package = "./pb";
package pb;

message File {
  string FileId = 1;
  string Name = 2;
  string Type = 3;
  string Path = 4;
  string UserId = 5;
  string FatherId = 6;
  int64 Size = 7;
  string Md5 = 8;
  int64 UpdateTime = 9;
}

message PublicFile {
  string FileId = 1;
  string Name = 2;
  string Type = 3;
  string Path = 4;
  string UserId = 5;
  string FatherId = 6;
  int64 Size = 7;
  string Md5 = 8;
  int64 UpdateTime = 9;
  string Description = 10;
}

message CosInfo {
  string SecretId = 1;
  string SecretKey = 2;
  string SessionToken = 3;
  string BucketName = 4;
}

message FindCosInfoReq{
  string UserId = 1;
}

message FindCosInfoResp{
  CosInfo COS = 1;
  string Error = 2;
}

message FindFileByMd5Req {
  string Md5 = 1;
}

message FindFileByMd5Resp {
  bool Ok = 1;
  string Error = 2;
}

message FindFileInfoByFileIdReq{
  string FileId = 1;
}

message FindFileInfoByFileIdResp{
  File File = 1;
  string Error = 2;
}

message FindFileByFileIdWithUserIdReq {
  string FileId = 1;
  string UserId = 2;
}

message FindFileByFileIdWithUserIdResp {
  File File = 1;
  string Error = 2;
}

message FindFileInfoByFileIdListReq{
  repeated string FileIdList = 1;
  string UserId = 2;
}

message FindFileInfoByFileIdListResp{
  repeated File FileList = 1;
  string Error = 2;
}

message FindFileInfoByFileIdListWithUserIdReq{
  repeated string FileIdList = 1;
  string UserId = 2;
}

message FindFileInfoByFileIdListWithUserIdResp{
  repeated File FileList = 1;
  string Error = 2;
}

message FindFileListByFatherIdReq{
  string FatherId = 1;
}

message FindFileListByFatherIdResp{
  repeated File FileList = 1;
  string Error = 2;
}

message FindFileListByFatherIdWithUserIdReq{
  string FatherId = 1;
  string UserId = 2;
}

message FindFileListByFatherIdWithUserIdResp{
  repeated File FileList = 1;
  string Error = 2;
}

message FindAllFileByFatherIdReq{
  string FatherId = 1;
  string UserId = 2;
}

message FindAllFileByFatherIdResp{
  repeated File FileList = 1;
  string Error = 2;
}

message CalFileSizeReq{
  string UserId = 1;
  optional int64 Size = 2;
  string Path = 3;
  bool Op = 4;
}

message CalFileSizeResp{
  string Error = 1;
}

message FindFileCountReq{

}

message FindFileCountResp{

}

message FindFileTypeReq{

}

message FindFileTypeResp{

}

message FindFileInfoInPublicByFileIdReq{
  string FileId = 1;
}

message FindFileInfoInPublicByFileIdResp{
  PublicFile File = 1;
  string Error = 2;
}

message FindPublicFileByFileIdWithUserIdReq{
  string FileId = 1;
  string UserId = 2;
}

message FindPublicFileByFileIdWithUserIdResp{
  PublicFile File = 1;
  string Error = 2;
}

message FindPublicByFileIdListReq{
  repeated string FileIdList = 1;
  string Error = 2;
}

message FindPublicByFileIdListResp{
  repeated PublicFile FileIdList = 1;
  string Error = 2;
}

message CalPublicFileSizeReq{
  string UserId = 1;
  optional int64 Size = 2;
  string Path = 3;
  bool Op = 4;
}

message CalPublicFileSizeResp{
  string Error = 1;
}

message FindPublicFileListByUserIdReq{
  string UserId = 1;
}

message FindPublicFileListByUserIdResp{
  repeated PublicFile FileList = 1;
}

message FindPublicFileListByFatherIdReq{
  string FatherId = 1;
}

message FindPublicFileListByFatherIdResp{
  repeated PublicFile FileList = 1;
  string Error = 2;
}

message FindAllPublicFileByFatherIdReq{
  string FatherId = 1;
}

message FindAllPublicFileByFatherIdResp{
  repeated PublicFile FileList = 1;
  string Error = 2;
}

message FindFileBySharingCodeReq{
  string SharingCode = 1;
}

message FindFileBySharingCodeResp{
  repeated File FileList = 1;
  string Error = 2;
}

message DeleteExpiredFilesReq{
}

message DeleteExpiredFilesResp{
}

message DeleteExpiredShareCodesReq{
}

message DeleteExpiredShareCodesResp{
}

message UploadFileReq {
  repeated bytes File = 1;
  repeated string Name = 2;
}

message UploadFileResp {
}

message AskUploadFileReq {
  int64 Size = 1;
  string UserId = 2;
  string Name = 3;
  string Type = 4;
  string Md5 = 5;
  string FatherId = 6;
  string FileId = 7;
  bool Ok = 8;
}

message AskUploadFileResp {
}

//service
service filecenter {
  rpc FindCosInfo (FindCosInfoReq) returns(FindCosInfoResp);
  rpc FindFileByMd5(FindFileByMd5Req) returns(FindFileByMd5Resp);
  rpc FindFileInfoByFileId(FindFileInfoByFileIdReq) returns(FindFileInfoByFileIdResp);
  rpc FindFileByFileIdWithUserId(FindFileByFileIdWithUserIdReq) returns(FindFileByFileIdWithUserIdResp);
  rpc FindFileInfoByFileIdList(FindFileInfoByFileIdListReq) returns(FindFileInfoByFileIdListResp);
  rpc FindFileInfoByFileIdListWithUserId(FindFileInfoByFileIdListWithUserIdReq) returns(FindFileInfoByFileIdListWithUserIdResp);
  rpc FindFileListByFatherId(FindFileListByFatherIdReq) returns(FindFileListByFatherIdResp);
  rpc FindFileListByFatherIdWithUserId(FindFileListByFatherIdWithUserIdReq) returns(FindFileListByFatherIdWithUserIdResp);
  rpc FindAllFileByFatherId(FindAllFileByFatherIdReq) returns(FindAllFileByFatherIdResp);
  rpc CalFileSize(CalFileSizeReq) returns(CalFileSizeResp);
  rpc FindFileCount(FindFileCountReq) returns(FindFileCountResp);
  rpc FindFileType(FindFileTypeReq) returns(FindFileTypeReq);
  rpc FindFileInfoInPublicByFileId (FindFileInfoInPublicByFileIdReq) returns(FindFileInfoInPublicByFileIdResp);
  rpc FindPublicFileByFileIdWithUserId(FindPublicFileByFileIdWithUserIdReq) returns(FindPublicFileByFileIdWithUserIdResp);
  rpc FindPublicByFileIdList(FindPublicByFileIdListReq) returns(FindPublicByFileIdListResp);
  rpc CalPublicFileSize(CalPublicFileSizeReq) returns(CalPublicFileSizeResp);
  rpc FindPublicFileListByUserId(FindPublicFileListByUserIdReq) returns(FindPublicFileListByUserIdResp);
  rpc FindPublicFileListByFatherId(FindPublicFileListByFatherIdReq) returns(FindPublicFileListByFatherIdResp);
  rpc FindAllPublicFileByFatherId(FindAllPublicFileByFatherIdReq) returns(FindAllPublicFileByFatherIdResp);
  rpc FindFileBySharingCode(FindFileBySharingCodeReq) returns(FindFileBySharingCodeResp);
  rpc UploadFile (UploadFileReq) returns(UploadFileResp);
  rpc AskUploadFile (AskUploadFileReq) returns(AskUploadFileResp);
  rpc AskUploadFileRollback (AskUploadFileReq) returns(AskUploadFileResp);
  rpc DeleteExpiredFiles(DeleteExpiredFilesReq) returns(DeleteExpiredFilesResp);
  rpc DeleteExpiredShareCodes(DeleteExpiredShareCodesReq) returns(DeleteExpiredShareCodesResp);
}
