// Code generated by goctl. DO NOT EDIT.
// Source: usercenter.proto

package usercenter

import (
	"context"

	"github.com/CloudStriver/service-idl-go/go-zero-gen/usercenter/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUserRemainderReq          = pb.AddUserRemainderReq
	AddUserRemainderResp         = pb.AddUserRemainderResp
	FindUserByUserIdListReq      = pb.FindUserByUserIdListReq
	FindUserByUserIdListResp     = pb.FindUserByUserIdListResp
	FindUserInfoByUserIdListReq  = pb.FindUserInfoByUserIdListReq
	FindUserInfoByUserIdListResp = pb.FindUserInfoByUserIdListResp
	SendEmailCodeReq             = pb.SendEmailCodeReq
	SendEmailCodeResp            = pb.SendEmailCodeResp
	SendEmailReq                 = pb.SendEmailReq
	SendEmailResp                = pb.SendEmailResp
	UpdateUserInfoReq            = pb.UpdateUserInfoReq
	UpdateUserInfoResp           = pb.UpdateUserInfoResp
	User                         = pb.User
	UserAuth                     = pb.UserAuth
	UserInfo                     = pb.UserInfo

	Usercenter interface {
		FindUserByUserIdList(ctx context.Context, in *FindUserByUserIdListReq, opts ...grpc.CallOption) (*FindUserByUserIdListResp, error)
		SendEmailCode(ctx context.Context, in *SendEmailCodeReq, opts ...grpc.CallOption) (*SendEmailCodeResp, error)
		AddUserRemainder(ctx context.Context, in *AddUserRemainderReq, opts ...grpc.CallOption) (*AddUserRemainderResp, error)
		UpdateUserInfo(ctx context.Context, in *UpdateUserInfoReq, opts ...grpc.CallOption) (*UpdateUserInfoResp, error)
		AddUserRemainderRollBack(ctx context.Context, in *AddUserRemainderReq, opts ...grpc.CallOption) (*AddUserRemainderResp, error)
		FindUserInfoByUserIdList(ctx context.Context, in *FindUserInfoByUserIdListReq, opts ...grpc.CallOption) (*FindUserInfoByUserIdListResp, error)
	}

	defaultUsercenter struct {
		cli zrpc.Client
	}
)

func NewUsercenter(cli zrpc.Client) Usercenter {
	return &defaultUsercenter{
		cli: cli,
	}
}

func (m *defaultUsercenter) FindUserByUserIdList(ctx context.Context, in *FindUserByUserIdListReq, opts ...grpc.CallOption) (*FindUserByUserIdListResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.FindUserByUserIdList(ctx, in, opts...)
}

func (m *defaultUsercenter) SendEmailCode(ctx context.Context, in *SendEmailCodeReq, opts ...grpc.CallOption) (*SendEmailCodeResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.SendEmailCode(ctx, in, opts...)
}

func (m *defaultUsercenter) AddUserRemainder(ctx context.Context, in *AddUserRemainderReq, opts ...grpc.CallOption) (*AddUserRemainderResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.AddUserRemainder(ctx, in, opts...)
}

func (m *defaultUsercenter) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoReq, opts ...grpc.CallOption) (*UpdateUserInfoResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.UpdateUserInfo(ctx, in, opts...)
}

func (m *defaultUsercenter) AddUserRemainderRollBack(ctx context.Context, in *AddUserRemainderReq, opts ...grpc.CallOption) (*AddUserRemainderResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.AddUserRemainderRollBack(ctx, in, opts...)
}

func (m *defaultUsercenter) FindUserInfoByUserIdList(ctx context.Context, in *FindUserInfoByUserIdListReq, opts ...grpc.CallOption) (*FindUserInfoByUserIdListResp, error) {
	client := pb.NewUsercenterClient(m.cli.Conn())
	return client.FindUserInfoByUserIdList(ctx, in, opts...)
}
