// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.4
// source: filecenter.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type File struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	Id         string `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	FatherId   string `protobuf:"bytes,4,opt,name=FatherId,proto3" json:"FatherId,omitempty"`
	Type       string `protobuf:"bytes,5,opt,name=Type,proto3" json:"Type,omitempty"`
	UpdateTime int64  `protobuf:"varint,6,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Size       int64  `protobuf:"varint,7,opt,name=Size,proto3" json:"Size,omitempty"`
	Md5        string `protobuf:"bytes,8,opt,name=Md5,proto3" json:"Md5,omitempty"`
	UserId     string `protobuf:"bytes,9,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *File) Reset() {
	*x = File{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *File) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *File) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *File) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *File) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *File) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type PublicFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Path       string `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	Id         string `protobuf:"bytes,3,opt,name=Id,proto3" json:"Id,omitempty"`
	FatherId   string `protobuf:"bytes,4,opt,name=FatherId,proto3" json:"FatherId,omitempty"`
	Type       string `protobuf:"bytes,5,opt,name=Type,proto3" json:"Type,omitempty"`
	UpdateTime int64  `protobuf:"varint,6,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty"`
	Size       int64  `protobuf:"varint,7,opt,name=Size,proto3" json:"Size,omitempty"`
	Md5        string `protobuf:"bytes,8,opt,name=Md5,proto3" json:"Md5,omitempty"`
	UserId     string `protobuf:"bytes,9,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *PublicFile) Reset() {
	*x = PublicFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicFile) ProtoMessage() {}

func (x *PublicFile) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicFile.ProtoReflect.Descriptor instead.
func (*PublicFile) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{1}
}

func (x *PublicFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublicFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PublicFile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PublicFile) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *PublicFile) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PublicFile) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

func (x *PublicFile) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PublicFile) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *PublicFile) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	UserId string `protobuf:"bytes,3,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Score  int64  `protobuf:"varint,4,opt,name=Score,proto3" json:"Score,omitempty"`
	Pos    int64  `protobuf:"varint,5,opt,name=Pos,proto3" json:"Pos,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{2}
}

func (x *FileInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *FileInfo) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *FileInfo) GetPos() int64 {
	if x != nil {
		return x.Pos
	}
	return 0
}

type OldFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId   string `protobuf:"bytes,1,opt,name=FileId,proto3" json:"FileId,omitempty"`
	OldPath  string `protobuf:"bytes,2,opt,name=OldPath,proto3" json:"OldPath,omitempty"`
	NewPath  string `protobuf:"bytes,3,opt,name=NewPath,proto3" json:"NewPath,omitempty"`
	IsFolder bool   `protobuf:"varint,4,opt,name=IsFolder,proto3" json:"IsFolder,omitempty"`
	Name     string `protobuf:"bytes,5,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *OldFileInfo) Reset() {
	*x = OldFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OldFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OldFileInfo) ProtoMessage() {}

func (x *OldFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OldFileInfo.ProtoReflect.Descriptor instead.
func (*OldFileInfo) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{3}
}

func (x *OldFileInfo) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *OldFileInfo) GetOldPath() string {
	if x != nil {
		return x.OldPath
	}
	return ""
}

func (x *OldFileInfo) GetNewPath() string {
	if x != nil {
		return x.NewPath
	}
	return ""
}

func (x *OldFileInfo) GetIsFolder() bool {
	if x != nil {
		return x.IsFolder
	}
	return false
}

func (x *OldFileInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type OssInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=AccessKeyId,proto3" json:"AccessKeyId,omitempty"`
	AccessKeySecret string `protobuf:"bytes,2,opt,name=AccessKeySecret,proto3" json:"AccessKeySecret,omitempty"`
	StsToken        string `protobuf:"bytes,3,opt,name=StsToken,proto3" json:"StsToken,omitempty"`
	Bucket          string `protobuf:"bytes,4,opt,name=Bucket,proto3" json:"Bucket,omitempty"`
}

func (x *OssInfo) Reset() {
	*x = OssInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OssInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OssInfo) ProtoMessage() {}

func (x *OssInfo) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OssInfo.ProtoReflect.Descriptor instead.
func (*OssInfo) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{4}
}

func (x *OssInfo) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *OssInfo) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *OssInfo) GetStsToken() string {
	if x != nil {
		return x.StsToken
	}
	return ""
}

func (x *OssInfo) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

type FindOssInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *FindOssInfoReq) Reset() {
	*x = FindOssInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOssInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOssInfoReq) ProtoMessage() {}

func (x *FindOssInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOssInfoReq.ProtoReflect.Descriptor instead.
func (*FindOssInfoReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{5}
}

func (x *FindOssInfoReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FindOssInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oss   *OssInfo `protobuf:"bytes,1,opt,name=Oss,proto3" json:"Oss,omitempty"`
	Error string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *FindOssInfoResp) Reset() {
	*x = FindOssInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindOssInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindOssInfoResp) ProtoMessage() {}

func (x *FindOssInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindOssInfoResp.ProtoReflect.Descriptor instead.
func (*FindOssInfoResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{6}
}

func (x *FindOssInfoResp) GetOss() *OssInfo {
	if x != nil {
		return x.Oss
	}
	return nil
}

func (x *FindOssInfoResp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type FindFileInfoByFileIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIdList []string `protobuf:"bytes,1,rep,name=FileIdList,proto3" json:"FileIdList,omitempty"`
	UserId     string   `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *FindFileInfoByFileIdReq) Reset() {
	*x = FindFileInfoByFileIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFileInfoByFileIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFileInfoByFileIdReq) ProtoMessage() {}

func (x *FindFileInfoByFileIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFileInfoByFileIdReq.ProtoReflect.Descriptor instead.
func (*FindFileInfoByFileIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{7}
}

func (x *FindFileInfoByFileIdReq) GetFileIdList() []string {
	if x != nil {
		return x.FileIdList
	}
	return nil
}

func (x *FindFileInfoByFileIdReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type FindFileInfoByFileIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileList []*File `protobuf:"bytes,1,rep,name=FileList,proto3" json:"FileList,omitempty"`
}

func (x *FindFileInfoByFileIdResp) Reset() {
	*x = FindFileInfoByFileIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFileInfoByFileIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFileInfoByFileIdResp) ProtoMessage() {}

func (x *FindFileInfoByFileIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFileInfoByFileIdResp.ProtoReflect.Descriptor instead.
func (*FindFileInfoByFileIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{8}
}

func (x *FindFileInfoByFileIdResp) GetFileList() []*File {
	if x != nil {
		return x.FileList
	}
	return nil
}

type FindFileInfoInPublicByFileIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileIdList []string `protobuf:"bytes,1,rep,name=FileIdList,proto3" json:"FileIdList,omitempty"`
}

func (x *FindFileInfoInPublicByFileIdReq) Reset() {
	*x = FindFileInfoInPublicByFileIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFileInfoInPublicByFileIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFileInfoInPublicByFileIdReq) ProtoMessage() {}

func (x *FindFileInfoInPublicByFileIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFileInfoInPublicByFileIdReq.ProtoReflect.Descriptor instead.
func (*FindFileInfoInPublicByFileIdReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{9}
}

func (x *FindFileInfoInPublicByFileIdReq) GetFileIdList() []string {
	if x != nil {
		return x.FileIdList
	}
	return nil
}

type FindFileInfoInPublicByFileIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileList []*PublicFile `protobuf:"bytes,1,rep,name=FileList,proto3" json:"FileList,omitempty"`
}

func (x *FindFileInfoInPublicByFileIdResp) Reset() {
	*x = FindFileInfoInPublicByFileIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindFileInfoInPublicByFileIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindFileInfoInPublicByFileIdResp) ProtoMessage() {}

func (x *FindFileInfoInPublicByFileIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindFileInfoInPublicByFileIdResp.ProtoReflect.Descriptor instead.
func (*FindFileInfoInPublicByFileIdResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{10}
}

func (x *FindFileInfoInPublicByFileIdResp) GetFileList() []*PublicFile {
	if x != nil {
		return x.FileList
	}
	return nil
}

type DeleteExpiredFilesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredFilesReq) Reset() {
	*x = DeleteExpiredFilesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredFilesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredFilesReq) ProtoMessage() {}

func (x *DeleteExpiredFilesReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredFilesReq.ProtoReflect.Descriptor instead.
func (*DeleteExpiredFilesReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{11}
}

type DeleteExpiredFilesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredFilesResp) Reset() {
	*x = DeleteExpiredFilesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredFilesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredFilesResp) ProtoMessage() {}

func (x *DeleteExpiredFilesResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredFilesResp.ProtoReflect.Descriptor instead.
func (*DeleteExpiredFilesResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{12}
}

type DeleteExpiredShareCodesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredShareCodesReq) Reset() {
	*x = DeleteExpiredShareCodesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredShareCodesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredShareCodesReq) ProtoMessage() {}

func (x *DeleteExpiredShareCodesReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredShareCodesReq.ProtoReflect.Descriptor instead.
func (*DeleteExpiredShareCodesReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{13}
}

type DeleteExpiredShareCodesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExpiredShareCodesResp) Reset() {
	*x = DeleteExpiredShareCodesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExpiredShareCodesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExpiredShareCodesResp) ProtoMessage() {}

func (x *DeleteExpiredShareCodesResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExpiredShareCodesResp.ProtoReflect.Descriptor instead.
func (*DeleteExpiredShareCodesResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{14}
}

type UploadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	File [][]byte `protobuf:"bytes,1,rep,name=File,proto3" json:"File,omitempty"`
	Name []string `protobuf:"bytes,2,rep,name=Name,proto3" json:"Name,omitempty"`
}

func (x *UploadFileReq) Reset() {
	*x = UploadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReq) ProtoMessage() {}

func (x *UploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReq.ProtoReflect.Descriptor instead.
func (*UploadFileReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{15}
}

func (x *UploadFileReq) GetFile() [][]byte {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UploadFileReq) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

type UploadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UploadFileResp) Reset() {
	*x = UploadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResp) ProtoMessage() {}

func (x *UploadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResp.ProtoReflect.Descriptor instead.
func (*UploadFileResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{16}
}

type AskUploadFileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size     int64  `protobuf:"varint,1,opt,name=Size,proto3" json:"Size,omitempty"`
	UserId   string `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Md5      string `protobuf:"bytes,5,opt,name=Md5,proto3" json:"Md5,omitempty"`
	FatherId string `protobuf:"bytes,6,opt,name=FatherId,proto3" json:"FatherId,omitempty"`
	FileId   string `protobuf:"bytes,7,opt,name=FileId,proto3" json:"FileId,omitempty"`
	Ok       bool   `protobuf:"varint,8,opt,name=Ok,proto3" json:"Ok,omitempty"`
}

func (x *AskUploadFileReq) Reset() {
	*x = AskUploadFileReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskUploadFileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskUploadFileReq) ProtoMessage() {}

func (x *AskUploadFileReq) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskUploadFileReq.ProtoReflect.Descriptor instead.
func (*AskUploadFileReq) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{17}
}

func (x *AskUploadFileReq) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AskUploadFileReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AskUploadFileReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AskUploadFileReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AskUploadFileReq) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *AskUploadFileReq) GetFatherId() string {
	if x != nil {
		return x.FatherId
	}
	return ""
}

func (x *AskUploadFileReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *AskUploadFileReq) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type AskUploadFileResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AskUploadFileResp) Reset() {
	*x = AskUploadFileResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filecenter_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AskUploadFileResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AskUploadFileResp) ProtoMessage() {}

func (x *AskUploadFileResp) ProtoReflect() protoreflect.Message {
	mi := &file_filecenter_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AskUploadFileResp.ProtoReflect.Descriptor instead.
func (*AskUploadFileResp) Descriptor() ([]byte, []int) {
	return file_filecenter_proto_rawDescGZIP(), []int{18}
}

var File_filecenter_proto protoreflect.FileDescriptor

var file_filecenter_proto_rawDesc = []byte{
	0x0a, 0x10, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xcc, 0x01, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x61, 0x74, 0x68, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d,
	0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x64, 0x35, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd2, 0x01, 0x0a, 0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x46, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x64, 0x35, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x08, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x6f, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x50, 0x6f, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x0b, 0x4f,
	0x6c, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07,
	0x4e, 0x65, 0x77, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4e,
	0x65, 0x77, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x49, 0x73, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x07, 0x4f, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,
	0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x53, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x53, 0x74, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x22, 0x28, 0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0f,
	0x46, 0x69, 0x6e, 0x64, 0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1d, 0x0a, 0x03, 0x4f, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x4f, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x51, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x18, 0x46, 0x69, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x08, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x1f, 0x46, 0x69, 0x6e,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x20,
	0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x17, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x1d, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x37, 0x0a, 0x0d,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xbc, 0x01, 0x0a, 0x10, 0x41, 0x73, 0x6b, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x64, 0x35, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x61, 0x74, 0x68, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x6b, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x4f, 0x6b, 0x22, 0x13, 0x0a, 0x11, 0x41, 0x73, 0x6b, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x32, 0xe4, 0x04, 0x0a, 0x0a,
	0x66, 0x69, 0x6c, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x0b, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x69, 0x0a, 0x1c, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x49, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x64, 0x12, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x42, 0x79, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a,
	0x14, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5a, 0x0a,
	0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3c,
	0x0a, 0x0d, 0x41, 0x73, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x6b, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x15,
	0x41, 0x73, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x6f, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x6b, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x73, 0x6b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_filecenter_proto_rawDescOnce sync.Once
	file_filecenter_proto_rawDescData = file_filecenter_proto_rawDesc
)

func file_filecenter_proto_rawDescGZIP() []byte {
	file_filecenter_proto_rawDescOnce.Do(func() {
		file_filecenter_proto_rawDescData = protoimpl.X.CompressGZIP(file_filecenter_proto_rawDescData)
	})
	return file_filecenter_proto_rawDescData
}

var file_filecenter_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_filecenter_proto_goTypes = []interface{}{
	(*File)(nil),                             // 0: pb.File
	(*PublicFile)(nil),                       // 1: pb.PublicFile
	(*FileInfo)(nil),                         // 2: pb.FileInfo
	(*OldFileInfo)(nil),                      // 3: pb.OldFileInfo
	(*OssInfo)(nil),                          // 4: pb.OssInfo
	(*FindOssInfoReq)(nil),                   // 5: pb.FindOssInfoReq
	(*FindOssInfoResp)(nil),                  // 6: pb.FindOssInfoResp
	(*FindFileInfoByFileIdReq)(nil),          // 7: pb.FindFileInfoByFileIdReq
	(*FindFileInfoByFileIdResp)(nil),         // 8: pb.FindFileInfoByFileIdResp
	(*FindFileInfoInPublicByFileIdReq)(nil),  // 9: pb.FindFileInfoInPublicByFileIdReq
	(*FindFileInfoInPublicByFileIdResp)(nil), // 10: pb.FindFileInfoInPublicByFileIdResp
	(*DeleteExpiredFilesReq)(nil),            // 11: pb.DeleteExpiredFilesReq
	(*DeleteExpiredFilesResp)(nil),           // 12: pb.DeleteExpiredFilesResp
	(*DeleteExpiredShareCodesReq)(nil),       // 13: pb.DeleteExpiredShareCodesReq
	(*DeleteExpiredShareCodesResp)(nil),      // 14: pb.DeleteExpiredShareCodesResp
	(*UploadFileReq)(nil),                    // 15: pb.UploadFileReq
	(*UploadFileResp)(nil),                   // 16: pb.UploadFileResp
	(*AskUploadFileReq)(nil),                 // 17: pb.AskUploadFileReq
	(*AskUploadFileResp)(nil),                // 18: pb.AskUploadFileResp
}
var file_filecenter_proto_depIdxs = []int32{
	4,  // 0: pb.FindOssInfoResp.Oss:type_name -> pb.OssInfo
	0,  // 1: pb.FindFileInfoByFileIdResp.FileList:type_name -> pb.File
	1,  // 2: pb.FindFileInfoInPublicByFileIdResp.FileList:type_name -> pb.PublicFile
	5,  // 3: pb.filecenter.FindOssInfo:input_type -> pb.FindOssInfoReq
	9,  // 4: pb.filecenter.FindFileInfoInPublicByFileId:input_type -> pb.FindFileInfoInPublicByFileIdReq
	7,  // 5: pb.filecenter.FindFileInfoByFileId:input_type -> pb.FindFileInfoByFileIdReq
	11, // 6: pb.filecenter.DeleteExpiredFiles:input_type -> pb.DeleteExpiredFilesReq
	13, // 7: pb.filecenter.DeleteExpiredShareCodes:input_type -> pb.DeleteExpiredShareCodesReq
	15, // 8: pb.filecenter.UploadFile:input_type -> pb.UploadFileReq
	17, // 9: pb.filecenter.AskUploadFile:input_type -> pb.AskUploadFileReq
	17, // 10: pb.filecenter.AskUploadFileRollback:input_type -> pb.AskUploadFileReq
	6,  // 11: pb.filecenter.FindOssInfo:output_type -> pb.FindOssInfoResp
	10, // 12: pb.filecenter.FindFileInfoInPublicByFileId:output_type -> pb.FindFileInfoInPublicByFileIdResp
	8,  // 13: pb.filecenter.FindFileInfoByFileId:output_type -> pb.FindFileInfoByFileIdResp
	12, // 14: pb.filecenter.DeleteExpiredFiles:output_type -> pb.DeleteExpiredFilesResp
	14, // 15: pb.filecenter.DeleteExpiredShareCodes:output_type -> pb.DeleteExpiredShareCodesResp
	16, // 16: pb.filecenter.UploadFile:output_type -> pb.UploadFileResp
	18, // 17: pb.filecenter.AskUploadFile:output_type -> pb.AskUploadFileResp
	18, // 18: pb.filecenter.AskUploadFileRollback:output_type -> pb.AskUploadFileResp
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_filecenter_proto_init() }
func file_filecenter_proto_init() {
	if File_filecenter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filecenter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*File); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OldFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OssInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOssInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindOssInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFileInfoByFileIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFileInfoByFileIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFileInfoInPublicByFileIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindFileInfoInPublicByFileIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredFilesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredFilesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredShareCodesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteExpiredShareCodesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskUploadFileReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filecenter_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AskUploadFileResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filecenter_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filecenter_proto_goTypes,
		DependencyIndexes: file_filecenter_proto_depIdxs,
		MessageInfos:      file_filecenter_proto_msgTypes,
	}.Build()
	File_filecenter_proto = out.File
	file_filecenter_proto_rawDesc = nil
	file_filecenter_proto_goTypes = nil
	file_filecenter_proto_depIdxs = nil
}
